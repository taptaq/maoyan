1. public文件夹中可放一些较大的图片，公共css，js等静态资源

2. src文件夹中：
   assets文件夹中可放一些较小的图片或图片（压缩式可压缩为base64）
   views里面可放页面级别的组件
   components里面可放公共组件

3.main.js负责渲染主组件

4.在设置路由时：component:()=>import('@/views/movie')  这种方式能按需加载组件

5.子组件通过props来获取父组件传递过来的值，被引用的就是子组件
（子组件中的data数据，不是通过父组件传递的是子组件私有的，是可读可写的。
   子组件中的所有 props中的数据，都是通过父组件传递给子组件的，是只读的。）

6.设置重定向：（在router index.js中设置）
    path:'/*',
    redirect: '/' 

7.设置二级路由(在router中的文件下设置)
children:[  //子组件(二级路由)
        {
            path:'city',
            component:()=>import('@/components/city'),  
        },
    ]


8.渲染子路由时，记得在对应位置加上路由出口：
<keep-alive>
          <router-view />
</keep-alive>

9.跨域问题：
在vue.config.js文件下编写
module.exports= {
    devServer:{
        proxy:{
            '/api':{      // '/api'代理
                target:'http://localhost:8082',  //对应域地址
                changeOrigin:true
            }
        }
    }
}

10.过滤器filter的使用
<img :src="item.img | setWH('128.180')" alt="" />
参考网址：https://cn.vuejs.org/v2/guide/filters.html

11.better-scroll插件的使用
可实现上拉加载等功能，可定义为单个组件（全局）

12.本地存储local storage
localStorage.getItem("xxx")  //从local storage中取值   
window.localStorage.setItem("xxx", JSON.stringify(data));  //存储值到local storage  （json.strngify是转为字符串）

13.状态管理  store.js的配置
可新建一个js文件配置相关状态信息(如city.js)
四件套：
const state={  //放全局参数（存储状态）
    // 初始值 
    nm:'北京',
    id:1
};

const actions={   //和mutations相似，但支持异步
};

const mutations={    //set方法（提交状态修改）不支持异步
    CITY_INFO(state,payload){
        state.nm=payload.nm;
        state.id=payload.id;
    }
};
this.$store.commit("city/CITY_INFO", { nm, id });

const getters={   //派生状态
};
外部调用方式：store.getters.personInfo()

export default {
    namespaced:true,
    state,
    actions,
    mutations
}
如果时另开文件，那可以在store.js中的modules中引入该模型


14.生命周期
https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA

15.Vue.extend()
使用基础 Vue 构造器，创建一个“子类”。参数是一个包含组件选项的对象。
参考网址：https://cn.vuejs.org/v2/api/index.html#Vue-extend

16.有些情况导入的时候要加个{}  import {xxx} from xxx
通过export function fnt(){} 导出的方法或函数是 要加上花括号{ fnt } 的

17.对于命名视图组件的定义引入，可在路由文件下的children配置：
 {
            path:'detail/1/:movieid',
            components:{    //对于命名视图组件的定义引入
                detail:()=>import('@/views/movie/detail'),
            },
 },

18.一个页面存在多个路由同时获取：（上一步骤的扩展设置）
{
            path:'detail/1/:movieid',
            components:{    //对于命名视图组件的定义引入
                detail:()=>import('@/views/movie/detail'),
                default:()=>import('@/components/soonshowing')
            },
            props:{    //能获取父组件传过来的值
                detail:true
            }
},







